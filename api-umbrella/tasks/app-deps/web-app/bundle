#!/usr/bin/env bash

set -e -u -x
source ./tasks/helpers.sh
source ./tasks/helpers/detect_os_release.sh

task_working_dir

detect_os_release
if [[ "$ID_NORMALIZED" == "rhel" && "$VERSION_ID" == "6" ]]; then
  # GCC 4.6+ for compiling libsass/sassc
  export CC=/opt/rh/devtoolset-7/root/usr/bin/gcc
  export CXX=/opt/rh/devtoolset-7/root/usr/bin/g++
fi

# Install into the task's special _persist directory so the installed gems dir
# isn't cleaned between runs for development purposes.
mkdir -p _persist
cd _persist

# Install all the gems for use in development/test.
export PATH="$STAGE_EMBEDDED_PATH"
export BUNDLE_GEMFILE="$SOURCE_DIR/src/api-umbrella/web-app/Gemfile"
BUNDLE_APP_CONFIG="$(pwd)/.bundle"
export BUNDLE_APP_CONFIG
bundle config --local build.nokogiri --use-system-libraries
bundle config --local path "$(pwd)/bundle"
bundle config --local clean true
bundle install
bundle update --bundler

# Make a copy of the gems in the release directory for production purposes, and
# then remove all non-production gems.
mkdir -p "$APP_CORE_VENDOR_BUNDLE_DIR"
rsync -a --delete ./bundle/ "$APP_CORE_VENDOR_BUNDLE_DIR/"
rsync -a -v --delete ./.bundle/ ./.bundle-prod/
BUNDLE_APP_CONFIG="$(pwd)/.bundle-prod"
export BUNDLE_APP_CONFIG
bundle config --local path "$APP_CORE_VENDOR_BUNDLE_DIR"
bundle config --local without "development:test:assets"
bundle config --local clean true
bundle config --local deployment true
bundle install

# Purge gem files we don't need to make for a lighter package distribution.
rm -rf \
  "$APP_CORE_VENDOR_BUNDLE_DIR"/ruby/*/cache \
  "$APP_CORE_VENDOR_BUNDLE_DIR"/ruby/*/gems/*/test* \
  "$APP_CORE_VENDOR_BUNDLE_DIR"/ruby/*/gems/*/spec \
  "$APP_CORE_VENDOR_BUNDLE_DIR"/ruby/*/bundler/gems/*/test* \
  "$APP_CORE_VENDOR_BUNDLE_DIR"/ruby/*/bundler/gems/*/spec \
  "$APP_CORE_VENDOR_BUNDLE_DIR"/ruby/*/bundler/gems/*/.git

stamp
