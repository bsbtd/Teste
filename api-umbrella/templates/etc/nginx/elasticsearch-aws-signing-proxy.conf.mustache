worker_processes {{elasticsearch.aws_signing_proxy.workers}};
error_log stderr {{elasticsearch.aws_signing_proxy.error_log_level}};
daemon off;
pid {{run_dir}}/elasticsearch-aws-signing-proxy.pid;

{{#user}}
user {{user}} {{group}};
{{/user}}

events {
  worker_connections {{nginx.worker_connections}};
}

env API_UMBRELLA_SRC_ROOT;
env API_UMBRELLA_RUNTIME_CONFIG;

pcre_jit on;

http {
  access_log {{log_dir}}/elasticsearch-aws-signing-proxy/{{nginx.access_log_filename}} combined;

  client_body_temp_path {{tmp_dir}}/elasticsearch-aws-signing-proxy-client_body_temp;
  proxy_temp_path {{tmp_dir}}/elasticsearch-aws-signing-proxy-proxy_temp;
  fastcgi_temp_path {{tmp_dir}}/elasticsearch-aws-signing-proxy-fastcgi_temp;
  uwsgi_temp_path {{tmp_dir}}/elasticsearch-aws-signing-proxy-uwsgi_temp;
  scgi_temp_path {{tmp_dir}}/elasticsearch-aws-signing-proxy-scgi_temp;
  server_tokens off;

  # FIXME: Detect path/make configurable.
  lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
  lua_ssl_verify_depth 5;

  lua_package_path '{{_package_path}}';
  lua_package_cpath '{{_package_cpath}}';
  lua_check_client_abort on;
  if_modified_since off;

  lua_shared_dict locks {{nginx.shared_dicts.locks.size}};

  {{#dns_resolver._nameservers_nginx}}
    resolver {{dns_resolver._nameservers_nginx}};
    resolver_timeout 12s;
  {{/dns_resolver._nameservers_nginx}}

  include ./mime.conf;
  include ./realip.conf;

  client_max_body_size 10m;
  client_body_buffer_size 10m;

  init_by_lua_file '{{_src_root_dir}}/src/api-umbrella/elasticsearch-aws-signing-proxy/init.lua';

  server {
    listen {{elasticsearch.aws_signing_proxy.host}}:{{elasticsearch.aws_signing_proxy.port}} so_keepalive=on;

    {{#_development_env?}}
      lua_code_cache off;
    {{/_development_env?}}

    location / {
      access_by_lua_file '{{_src_root_dir}}/src/api-umbrella/elasticsearch-aws-signing-proxy/proxy.lua';

      proxy_buffering off;
      set $backend_upstream "https://{{elasticsearch.aws_signing_proxy.aws_host}}:443";
      proxy_pass $backend_upstream;
    }
  }
}
